<?php

$params = getopt('', [
    'project-name:'
]);

$projectName = $params['project-name'];

$configFile = <<<FILE
<?php

return [
    'connection' => [
        'driver' => 'mysql',
        'host' => 'localhost',
        'dbname' => '',
        'user' => 'root',
        'pass' => '',
    ],
    // ... another db connection
];
FILE;

$simpleModelExampleFile = <<<FILE
<?php

namespace $projectName\\models;

use $projectName\\records\\ActiveRecord;

class SimpleModelExample extends ActiveRecord
{
    public function table()
    {
        return 'table_name';
    }

    public function fields()
    {
        return [];
    }
}
FILE;

$viewExampleFile = <<<FILE
<?php

namespace $projectName\\models;

use $projectName\\records\\ActiveRecord;
use suql\\syntax\\Field;

class ViewExample extends ActiveRecord
{
    public function query()
    {
        return 'view_example_name';
    }

    public function table()
    {
        return 'table_from_name';
    }

    public function fields()
    {
        return [];
    }

    public function view()
    {
        return
            \$this
                ->join('another_table')
                    ->select([
                        'field_name',
                        new Field(['another_field_name' => 'alias_for_it'], [
                            'modifier_name',
                        ])
                    ]);
    }
}
FILE;

$subQueryExampleFile = <<<FILE
<?php

namespace $projectName\\models;

use $projectName\\records\\ActiveRecord;

class SubQueryExample extends ActiveRecord
{
    public function query()
    {
        return 'sub_query_example_name';
    }

    public function table()
    {
        return InnerQueryModel::all();
    }

    public function fields()
    {
        return [];
    }

    public function view()
    {
        return
            \$this
                ->select([
                    'field_name',
                    'another_field_name',
                ]);
    }
}
FILE;

$rawQueryExampleFile = <<<FILE
<?php

namespace $projectName\\models;

use $projectName\\records\\ActiveRecord;

class RawQueryExample extends ActiveRecord
{
    public function query()
    {
        return 'raw_query_name';
    }

    public function table()
    {
        return null;
    }

    public function fields()
    {
        return [];
    }

    public function view()
    {
        return
            \$this
                ->select([
                    '2 * 2',
                    "'Yuriy' as author",
                ]);
    }
}
FILE;

$unionQueryExampleFile = <<<FILE
<?php

namespace $projectName\\models;

use suql\\syntax\\Field;
use $projectName\\records\\ActiveRecord;

class UnionQueryExample extends ActiveRecord
{
    public function query()
    {
        return 'union_query_name';
    }

    public function table()
    {
        return null;
    }

    public function fields()
    {
        return [];
    }

    public function view()
    {
        return
            \$this->union([
                OneModel::all()
                    ->select([
                        new Field(['field_name' => 'alias_for_it'], [
                            'modifier_name'
                        ])
                    ])
                    ->as('alias_for_this_query'),
                AnotherModel::all()
                    ->select([
                        new Field(['field_name' => 'alias_for_it'], [
                            'modifier_name'
                        ])
                    ])
                    ->as('alias_for_this_query'),
            ]);
    }
}
FILE;

$activeRecordFile = <<<FILE
<?php

namespace $projectName\\records;

use suql\\syntax\\SuQL;
use $projectName\\modifiers\\CustomModifierExample;
use suql\\db\\Container;

abstract class ActiveRecord extends SuQL
{
    protected static \$schemeClass = '$projectName\\\\schema\\\\AppScheme';
    protected static \$builderClass = 'suql\\\\builder\\\\MySQLBuilder';

    protected function modifierList()
    {
        return array_merge(
            parent::modifierList(),
            [
                CustomModifierExample::class,
            ]
        );
    }

    public function getDb()
    {
        return Container::get('connection');
    }
}
FILE;

$appSchemeFile = <<<FILE
<?php

namespace $projectName\\schema;

use suql\\core\\Scheme;

class AppScheme extends Scheme
{
    function __construct()
    {
        // \$this->addTableList([
        //     'users' => 'u',
        //     'user_group' => 'ug',
        //     'groups' => 'g',
        // ]);

        // \$this->rel('{{u}}', '{{ug}}', '{{u}}.id = {{ug}}.user_id');
        // \$this->rel('{{ug}}', '{{g}}', '{{ug}}.group_id = {{g}}.id');
    }
}
FILE;

$customModifierExampleFile = <<<FILE
<?php

namespace $projectName\\modifiers;

class CustomModifierExample
{
    public static function mod_modifierName(\$ofield, \$params)
    {
        // ... Code here
    }
}
FILE;

mkdir($projectName, 0700);

mkdir("$projectName/config", 0700);
file_put_contents("$projectName/config/db.php", $configFile);

mkdir("$projectName/models", 0700);
file_put_contents("$projectName/models/SimpleModelExample.php", $simpleModelExampleFile);
file_put_contents("$projectName/models/ViewExample.php", $viewExampleFile);
file_put_contents("$projectName/models/SubQueryExample.php", $subQueryExampleFile);
file_put_contents("$projectName/models/RawQueryExample.php", $rawQueryExampleFile);
file_put_contents("$projectName/models/UnionQueryExample.php", $unionQueryExampleFile);

mkdir("$projectName/records", 0700);
file_put_contents("$projectName/records/ActiveRecord.php", $activeRecordFile);

mkdir("$projectName/schema", 0700);
file_put_contents("$projectName/schema/AppScheme.php", $appSchemeFile);

mkdir("$projectName/modifiers", 0700);
file_put_contents("$projectName/modifiers/CustomModifierExample.php", $customModifierExampleFile);